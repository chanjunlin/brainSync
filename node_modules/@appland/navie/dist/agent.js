"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AgentOptions = exports.AgentMode = void 0;
var AgentMode;
(function (AgentMode) {
    AgentMode["Explain"] = "explain";
    AgentMode["Generate"] = "generate";
    AgentMode["Help"] = "help";
    AgentMode["Test"] = "test";
    AgentMode["Plan"] = "plan";
})(AgentMode = exports.AgentMode || (exports.AgentMode = {}));
class AgentOptions {
    constructor(question, aggregateQuestion, userOptions, chatHistory, projectInfo, codeSelection, contextLabels) {
        this.question = question;
        this.aggregateQuestion = aggregateQuestion;
        this.userOptions = userOptions;
        this.chatHistory = chatHistory;
        this.projectInfo = projectInfo;
        this.codeSelection = codeSelection;
        this.contextLabels = contextLabels;
    }
    get hasAppMaps() {
        return this.projectInfo.some((info) => { var _a; return info.appmapStats && ((_a = info.appmapStats) === null || _a === void 0 ? void 0 : _a.numAppMaps) > 0; });
    }
    buildContextFilters() {
        const filters = {};
        if (this.contextLabels)
            filters.labels = this.contextLabels;
        this.userOptions.populateContextFilters(filters);
        return filters;
    }
}
exports.AgentOptions = AgentOptions;
