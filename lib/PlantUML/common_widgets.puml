@startuml
set namespaceSeparator ::

class "brainsync::miscellaneous::firebase_options.dart::DefaultFirebaseOptions" {
  {static} +FirebaseOptions web
  {static} +FirebaseOptions android
  {static} +FirebaseOptions ios
  {static} +FirebaseOptions macos
  {static} +FirebaseOptions windows
  {static} +FirebaseOptions currentPlatform
}

"brainsync::miscellaneous::firebase_options.dart::DefaultFirebaseOptions" o-- "firebase_core_platform_interface::firebase_core_platform_interface.dart::FirebaseOptions"

class "brainsync::miscellaneous::main.dart::MyApp" {
  -GetIt _getIt
  +State<MyApp> createState()
}

"brainsync::miscellaneous::main.dart::MyApp" o-- "get_it::get_it.dart::GetIt"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::miscellaneous::main.dart::MyApp"

class "brainsync::miscellaneous::main.dart::_MyAppState" {
  -GetIt _getIt
  -AuthService _authService
  -AlertService _alertService
  +StreamSubscription<User?> user
  -NavigationService _navigationService
  +void initState()
  +void dispose()
  +Widget build()
}

"brainsync::miscellaneous::main.dart::_MyAppState" o-- "get_it::get_it.dart::GetIt"
"brainsync::miscellaneous::main.dart::_MyAppState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::miscellaneous::main.dart::_MyAppState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::miscellaneous::main.dart::_MyAppState" o-- "dart::async::StreamSubscription<User>"
"brainsync::miscellaneous::main.dart::_MyAppState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::miscellaneous::main.dart::_MyAppState"

class "brainsync::model::post.dart::Post" {
  +int? commentCount
  +List<dynamic>? likes
  +String? authorName
  +String? content
  +String? id
  +String? title
  +Timestamp? timestamp
  +Map<String, dynamic> toJson()
}

"brainsync::model::post.dart::Post" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "brainsync::model::message.dart::Message" {
  +String? senderID
  +String? content
  +MessageType? messageType
  +Timestamp? sentAt
  +Map<String, dynamic> toJson()
}

"brainsync::model::message.dart::Message" o-- "brainsync::model::message.dart::MessageType"
"brainsync::model::message.dart::Message" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "brainsync::model::message.dart::MessageType" {
  +int index
  {static} +List<MessageType> values
  {static} +MessageType Text
  {static} +MessageType Image
}

"brainsync::model::message.dart::MessageType" o-- "brainsync::model::message.dart::MessageType"
"dart::core::Enum" <|-- "brainsync::model::message.dart::MessageType"

class "brainsync::model::time.dart::CustomShortMessages" {
  +String prefixAgo()
  +String prefixFromNow()
  +String suffixAgo()
  +String suffixFromNow()
  +String lessThanOneMinute()
  +String aboutAMinute()
  +String minutes()
  +String aboutAnHour()
  +String hours()
  +String aDay()
  +String days()
  +String aboutAMonth()
  +String months()
  +String aboutAYear()
  +String years()
  +String wordSeparator()
}

"timeago::src::messages::lookupmessages.dart::LookupMessages" <|-- "brainsync::model::time.dart::CustomShortMessages"

class "brainsync::model::module.dart::Module" {
  +String code
  +String title
  +int? credits
}

class "brainsync::model::user_profile.dart::UserProfile" {
  +String? bio
  +String? firstName
  +String? lastName
  +String? pfpURL
  +String? profileCoverURL
  +String? uid
  +String? year
  +List<String?>? bookmarks
  +List<String?>? chats
  +List<String?>? completedModules
  +List<String?>? currentModules
  +List<String?>? friendList
  +List<String?>? friendReqList
  +List<String?>? myComments
  +List<String?>? myPosts
  +List<String?>? myLikedComments
  +List<String?>? myLikedPosts
  +Map<String, dynamic> toJson()
}

class "brainsync::model::comment.dart::Comment" {
  +String? authorID
  +String? content
  +List<String?>? likes
  +Timestamp? timestamp
  +Map<String, dynamic> toJson()
}

"brainsync::model::comment.dart::Comment" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "brainsync::model::chat.dart::Chat" {
  +String? id
  +List<String>? participantsNames
  +List<String>? participantsIds
  +List<Message>? messages
  +Message? lastMessage
  +Timestamp? createdAt
  +Timestamp? updatedAt
  +bool? isGroupChat
  +int? unreadCount
  +Map<String, dynamic> toJson()
}

"brainsync::model::chat.dart::Chat" o-- "brainsync::model::message.dart::Message"
"brainsync::model::chat.dart::Chat" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "brainsync::common_widgets::square_tile.dart::SquareTile" {
  +String imagePath
  +void Function() onTap
  +String? label
  +Widget build()
}

"brainsync::common_widgets::square_tile.dart::SquareTile" o-- "null::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::common_widgets::square_tile.dart::SquareTile"

class "brainsync::common_widgets::edit_list_field.dart::CustomListField" {
  +List<dynamic>? modulesList
  +String moduleType
  +bool isEditable
  +_CustomListFieldState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::edit_list_field.dart::CustomListField"

class "brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" {
  -GetIt _getIt
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +List<TextEditingController> moduleController
  +void initState()
  +void dispose()
  +void removeModule()
  +List<String> getUpdatedModuleList()
  +Widget build()
  +Widget buildSectionTitle()
  +Widget buildModulesList()
}

"brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" o-- "get_it::get_it.dart::GetIt"
"brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState"

class "brainsync::common_widgets::search_bar.dart::CustomSearch" {
  +List<String> searchTerms
  +List<Widget> buildActions()
  +Widget buildLeading()
  +Widget buildResults()
  +Widget buildSuggestions()
}

"flutter::src::material::search.dart::SearchDelegate" <|-- "brainsync::common_widgets::search_bar.dart::CustomSearch"

class "brainsync::common_widgets::home_post_card.dart::HomePostCard" {
  +String? postId
  +State<HomePostCard> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::home_post_card.dart::HomePostCard"

class "brainsync::common_widgets::home_post_card.dart::_HomePostCardState" {
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  +bool? isLiked
  +bool? isBookmarked
  +DateTime? timeStamp
  +int? commentCount
  +int? likeCount
  +String? title
  +String? content
  +String? authorName
  +String? postId
  +String? timeAgo
  +List<dynamic>? bookmarks
  +List<dynamic>? likes
  +dynamic loadedProfile
  +void initState()
  +void dispose()
  +dynamic loadProfile()
  +Widget build()
  +Widget buildCard()
  +void likePost()
  +void dislikePost()
  +dynamic bookmark()
}

"brainsync::common_widgets::home_post_card.dart::_HomePostCardState" o-- "get_it::get_it.dart::GetIt"
"brainsync::common_widgets::home_post_card.dart::_HomePostCardState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::common_widgets::home_post_card.dart::_HomePostCardState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::common_widgets::home_post_card.dart::_HomePostCardState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::home_post_card.dart::_HomePostCardState"

class "brainsync::common_widgets::friend_request_card.dart::FriendRequestCard" {
  +dynamic userData
  +State<FriendRequestCard> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::friend_request_card.dart::FriendRequestCard"

class "brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" {
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +dynamic userData
  +List<dynamic> friendReqList
  +dynamic loadedProfile
  +void initState()
  +Widget build()
  +dynamic loadProfile()
}

"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "get_it::get_it.dart::GetIt"
"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState"

class "brainsync::common_widgets::navBar.dart::NavBar" {
  +State<NavBar> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::navBar.dart::NavBar"

class "brainsync::common_widgets::navBar.dart::_NavBarState" {
  -AlertService _alertService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +String? userProfilePfp
  +String? userProfileCover
  +String? firstName
  +String? lastName
  +List<dynamic>? friendReqList
  +List<dynamic>? currentModules
  +List<dynamic>? completedModules
  -GetIt _getIt
  +void initState()
  +Widget build()
  +void loadProfile()
}

"brainsync::common_widgets::navBar.dart::_NavBarState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::common_widgets::navBar.dart::_NavBarState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::common_widgets::navBar.dart::_NavBarState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::common_widgets::navBar.dart::_NavBarState" o-- "get_it::get_it.dart::GetIt"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::navBar.dart::_NavBarState"

class "brainsync::common_widgets::module_card.dart::ModuleTile" {
  +Module module
  +Function onTap
  +Widget build()
}

"brainsync::common_widgets::module_card.dart::ModuleTile" o-- "brainsync::model::module.dart::Module"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::common_widgets::module_card.dart::ModuleTile"

class "brainsync::common_widgets::chat_tile.dart::CustomChatTile" {
  +String title
  +String? subtitle
  +Widget leading
  +void Function() onTap
  +Widget build()
}

"brainsync::common_widgets::chat_tile.dart::CustomChatTile" o-- "flutter::src::widgets::framework.dart::Widget"
"brainsync::common_widgets::chat_tile.dart::CustomChatTile" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::common_widgets::chat_tile.dart::CustomChatTile"

class "brainsync::common_widgets::dialog.dart::CustomDialog" {
  {static} +void show()
}

class "brainsync::common_widgets::post_card.dart::PostCard" {
  +String postId
  +Map<String, dynamic> postData
  +void Function() onLikeChanged
  +_PostCardState createState()
}

"brainsync::common_widgets::post_card.dart::PostCard" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::post_card.dart::PostCard"

class "brainsync::common_widgets::post_card.dart::_PostCardState" {
  -GetIt _getIt
  -AuthService _authService
  -DatabaseService _databaseService
  +void initState()
  +Widget build()
}

"brainsync::common_widgets::post_card.dart::_PostCardState" o-- "get_it::get_it.dart::GetIt"
"brainsync::common_widgets::post_card.dart::_PostCardState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::common_widgets::post_card.dart::_PostCardState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::post_card.dart::_PostCardState"

class "brainsync::common_widgets::user_tile.dart::UserTile" {
  +UserProfile userProfile
  +Function onTap
  +Widget build()
}

"brainsync::common_widgets::user_tile.dart::UserTile" o-- "brainsync::model::user_profile.dart::UserProfile"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::common_widgets::user_tile.dart::UserTile"

class "brainsync::common_widgets::custom_form_field.dart::CustomFormField" {
  +String labelText
  +String hintText
  +double height
  +RegExp validationRegEx
  +void Function(String?) onSaved
  +bool obscureText
  +Widget? suffixIcon
  +CustomFormFieldState createState()
}

"brainsync::common_widgets::custom_form_field.dart::CustomFormField" o-- "null::void Function(String)"
"brainsync::common_widgets::custom_form_field.dart::CustomFormField" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::custom_form_field.dart::CustomFormField"

class "brainsync::common_widgets::custom_form_field.dart::CustomFormFieldState" {
  -bool _obscureText
  +void initState()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::custom_form_field.dart::CustomFormFieldState"

class "brainsync::common_widgets::bottomBar.dart::CustomBottomNavBar" {
  +int initialIndex
  +CustomBottomNavBarState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::bottomBar.dart::CustomBottomNavBar"

class "brainsync::common_widgets::bottomBar.dart::CustomBottomNavBarState" {
  -NavigationService _navigationService
  +Widget build()
}

"brainsync::common_widgets::bottomBar.dart::CustomBottomNavBarState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::bottomBar.dart::CustomBottomNavBarState"

class "brainsync::common_widgets::edit_text_field.dart::CustomTextField" {
  +TextEditingController textController
  +String labelText
  +double vertical
  +double horizontal
  +int maxLines
  +State<CustomTextField> createState()
}

"brainsync::common_widgets::edit_text_field.dart::CustomTextField" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::edit_text_field.dart::CustomTextField"

class "brainsync::common_widgets::edit_text_field.dart::_CustomTextFieldState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::edit_text_field.dart::_CustomTextFieldState"

class "brainsync::pages::home.dart::Home" {
  +State<Home> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::home.dart::Home"

class "brainsync::pages::home.dart::_HomeState" {
  -GetIt _getIt
  -AlertService _alertService
  -DatabaseService _databaseService
  +TextEditingController searchQuery
  +dynamic allPostsFuture
  +List<DocumentSnapshot<Object?>> allPosts
  +List<DocumentSnapshot<Object?>> filteredPosts
  +List<dynamic> bookmarks
  +void initState()
  +void dispose()
  +dynamic fetchPosts()
  -void _onSearchChanged()
  +dynamic loadProfile()
  +void clearSearch()
  +Widget build()
}

"brainsync::pages::home.dart::_HomeState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::home.dart::_HomeState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::home.dart::_HomeState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::home.dart::_HomeState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::home.dart::_HomeState"
"flutter::src::widgets::routes.dart::RouteAware" <|-- "brainsync::pages::home.dart::_HomeState"

class "brainsync::pages::form::signup_form.dart::SignUpForm" {
  +State<SignUpForm> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::form::signup_form.dart::SignUpForm"

class "brainsync::pages::form::signup_form.dart::SignUpFormState" {
  +String? bio
  +String? firstName
  +String? lastName
  +String? email
  +String? password
  +String? repassword
  +String? selectedYear
  +List<String>? chats
  +List<String>? friendList
  +List<String>? friendReqList
  +List<String>? currentModules
  +List<String>? completedModules
  +List<String>? myComments
  +List<String>? myPosts
  -GetIt _getIt
  -GlobalKey<FormState> _signupFormKey
  -AuthService _authService
  -NavigationService _navigationService
  -AlertService _alertService
  -DatabaseService _databaseService
  +bool isLoading
  +void initState()
  +List<String> getYearOptions()
  +Widget build()
}

"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::form::signup_form.dart::SignUpFormState"

class "brainsync::pages::form::form_header.dart::FormHeader" {
  +String title
  +String subTitle
  +Image image
  +Widget build()
}

"brainsync::pages::form::form_header.dart::FormHeader" o-- "flutter::src::widgets::image.dart::Image"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::pages::form::form_header.dart::FormHeader"

class "brainsync::pages::form::login_form.dart::LoginForm" {
  +dynamic Function(bool) setLoading
  +Function navigateToHome
  +State<LoginForm> createState()
}

"brainsync::pages::form::login_form.dart::LoginForm" o-- "null::dynamic Function(bool)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::form::login_form.dart::LoginForm"

class "brainsync::pages::form::login_form.dart::_LoginFormState" {
  -GlobalKey<FormState> _loginFormKey
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  +String? email
  +String? password
  -bool _obscurePassword
  +void initState()
  +Widget build()
  +Widget forgetPassword()
}

"brainsync::pages::form::login_form.dart::_LoginFormState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"brainsync::pages::form::login_form.dart::_LoginFormState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::form::login_form.dart::_LoginFormState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::form::login_form.dart::_LoginFormState" o-- "brainsync::services::auth_service.dart::AuthService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::form::login_form.dart::_LoginFormState"

class "brainsync::pages::Posts::bookmarked_posts.dart::BookmarkedPosts" {
  +_BookmarkedPostsState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Posts::bookmarked_posts.dart::BookmarkedPosts"

class "brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" {
  -GetIt _getIt
  -Map<String, bool> _bookmarks
  +String userID
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +dynamic bookmarkedPosts
  +dynamic loadedBookmarks
  +void initState()
  +dynamic loadBookmarks()
  +void didChangeDependencies()
  +Widget build()
}

"brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState"

class "brainsync::pages::Posts::post.dart::PostsPage" {
  +_PostsPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Posts::post.dart::PostsPage"

class "brainsync::pages::Posts::post.dart::_PostsPageState" {
  +String? userProfilePfp
  +String? name
  -TextEditingController _titleController
  -TextEditingController _contentController
  -GlobalKey<FormState> _formKey
  -GetIt _getIt
  -LanguageChecker _checker
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +dynamic futureModules
  +List<Module> filteredModules
  -Timer? _debounce
  +void initState()
  +void dispose()
  +void onTitleChanged()
  +void filterModules()
  +bool isValidModuleCode()
  +dynamic createPost()
  +Widget discardButton()
  +Widget sendButton()
  +Widget buildSuggestionList()
  +Widget build()
}

"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "badword_guard::badword_guard.dart::LanguageChecker"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Posts::post.dart::_PostsPageState"

class "brainsync::pages::Posts::comment_card.dart::CommentCard" {
  +String authorName
  +String content
  +String formattedDate
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::pages::Posts::comment_card.dart::CommentCard"

class "brainsync::pages::Posts::actual_post.dart::PostDetailPage" {
  +String postId
  +String title
  +String content
  +DateTime timestamp
  +String authorName
  +_PostDetailPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Posts::actual_post.dart::PostDetailPage"

class "brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" {
  -GetIt _getIt
  +String userId
  -AuthService _authService
  -DatabaseService _databaseService
  -AlertService _alertService
  +String? currentUser
  -TextEditingController _commentController
  +LanguageChecker checker
  +void initState()
  +void loadProfile()
  +dynamic addComment()
  +dynamic likeComment()
  +dynamic dislikeComment()
  +Widget build()
}

"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "badword_guard::badword_guard.dart::LanguageChecker"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Posts::actual_post.dart::_PostDetailPageState"

class "brainsync::pages::notifications.dart::Notifications" {
  +State<Notifications> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::notifications.dart::Notifications"

class "brainsync::pages::notifications.dart::_NotificationsState" {
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  +String firstName
  +String lastName
  +bool isFriendRequestSent
  +List<dynamic>? friendReqList
  +bool isFriend
  +StreamSubscription<DocumentSnapshot<Object?>> friendRequestStream
  +void initState()
  +void dispose()
  +Widget build()
  +Widget buildNotifications()
  +Widget buildFriendRequestTile()
  +void loadProfile()
}

"brainsync::pages::notifications.dart::_NotificationsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::notifications.dart::_NotificationsState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::notifications.dart::_NotificationsState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::notifications.dart::_NotificationsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::notifications.dart::_NotificationsState" o-- "dart::async::StreamSubscription<DocumentSnapshot<Object>>"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::notifications.dart::_NotificationsState"

class "brainsync::pages::Profile::profile.dart::Profile" {
  +State<Profile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::profile.dart::Profile"

class "brainsync::pages::Profile::profile.dart::_ProfileState" {
  +double coverHeight
  +double profileHeight
  -GetIt _getIt
  +Uint8List? pickedImage
  +File? selectedImage
  +int? currentCredits
  +String? bio
  +String? firstName
  +String? lastName
  +String? pfpURL
  +String? profileCoverURL
  +String? uid
  +String? year
  +List<String?>? chats
  +List<String?>? completedModules
  +List<String?>? currentModules
  +List<String?>? friendList
  +List<String?>? friendReqList
  +List<String?>? myComments
  +List<String?>? myPosts
  +List<String?>? myLikedComments
  +List<String?>? myLikedPosts
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +DocumentSnapshot<Object?> user
  +dynamic loadedProfile
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  +void didPopNext()
  +dynamic loadProfile()
  +Widget build()
  +Widget buildProfile()
  +Widget buildTop()
  +Widget buildCoverImage()
  +Widget buildProfileImage()
  +Widget buildSignOutButton()
  +Widget buildProfileInfo()
  +Widget editProfileButton()
  +Widget buildTabBarSection()
  +Widget showModule()
  +Widget showPost()
  +Widget showFriends()
}

"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "dart::typed_data::Uint8List"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "dart::io::File"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "cloud_firestore::cloud_firestore.dart::DocumentSnapshot<Object>"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::profile.dart::_ProfileState"
"flutter::src::widgets::routes.dart::RouteAware" <|-- "brainsync::pages::Profile::profile.dart::_ProfileState"

class "brainsync::pages::Profile::about_me.dart::AboutMe" {
  +State<AboutMe> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::about_me.dart::AboutMe"

class "brainsync::pages::Profile::about_me.dart::_AboutMeState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::about_me.dart::_AboutMeState"

class "brainsync::pages::Profile::show_my_friends.dart::ShowMyFriends" {
  +State<ShowMyFriends> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::show_my_friends.dart::ShowMyFriends"

class "brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState" {
  -GetIt _getIt
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +void initState()
  +Widget build()
}

"brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState"

class "brainsync::pages::Profile::show_my_modules.dart::ShowModule" {
  +List<String?>? currentModules
  +List<String?>? completedModules
  +State<ShowModule> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::show_my_modules.dart::ShowModule"

class "brainsync::pages::Profile::show_my_modules.dart::_ShowModuleState" {
  +num totalCurrentCredit
  +num totalCompletedCredit
  -GetIt _getIt
  -NavigationService _navigationService
  +void initState()
  +void calculateTotalCredits()
  +Widget build()
  +Widget buildSectionTitle()
  +Widget buildModulesList()
  +Widget displayTotalCredits()
}

"brainsync::pages::Profile::show_my_modules.dart::_ShowModuleState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::show_my_modules.dart::_ShowModuleState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::show_my_modules.dart::_ShowModuleState"

class "brainsync::pages::Profile::show_my_posts.dart::ShowMyPosts" {
  +List<String?>? myPosts
  +State<ShowMyPosts> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::show_my_posts.dart::ShowMyPosts"

class "brainsync::pages::Profile::show_my_posts.dart::_ShowMyPostsState" {
  -GetIt _getIt
  -DatabaseService _databaseService
  +void initState()
  +Widget build()
}

"brainsync::pages::Profile::show_my_posts.dart::_ShowMyPostsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::show_my_posts.dart::_ShowMyPostsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::show_my_posts.dart::_ShowMyPostsState"

class "brainsync::pages::Profile::edit_profile.dart::EditProfilePage" {
  +_EditProfilePageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::edit_profile.dart::EditProfilePage"

class "brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" {
  +double coverHeight
  +double profileHeight
  -GlobalKey<FormState> _formKey
  -GetIt _getIt
  +TextEditingController firstNameController
  +TextEditingController lastNameController
  +TextEditingController bioController
  +TextEditingController yearController
  +File? selectedCoverImage
  +File? selectedProfileImage
  +String? userProfilePfp
  +String? userProfileCover
  +List<dynamic>? friendReqList
  +List<dynamic>? currentModules
  +List<dynamic>? completedModules
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -MediaService _mediaService
  -NavigationService _navigationService
  -StorageService _storageService
  +dynamic loadedProfile
  +String? selectedYear
  +List<String> getYearOptions()
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  +void didPopNext()
  +dynamic loadProfile()
  +void saveProfile()
  +Widget build()
  +Widget buildProfile()
  +Widget buildTop()
  +Widget buildCoverImage()
  +Widget buildProfileImage()
  +Widget buildProfileInfo()
  +Widget editProfile()
  +Widget cancelEdit()
}

"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "dart::io::File"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::media_service.dart::MediaService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::storage_service.dart::StorageService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState"
"flutter::src::widgets::routes.dart::RouteAware" <|-- "brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState"

class "brainsync::pages::Profile::visiting_profile.dart::VisitProfile" {
  +String userId
  +State<VisitProfile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::visiting_profile.dart::VisitProfile"

class "brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" {
  +bool isFriendRequestSent
  +bool isFriend
  +FirebaseFirestore firestore
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +StreamSubscription<DocumentSnapshot<Object?>> profileStream
  +String? bio
  +String? firstName
  +String? lastName
  +String? pfpURL
  +String? profileCoverURL
  +String? uid
  +String? year
  +List<String?>? chats
  +List<String?>? completedModules
  +List<String?>? currentModules
  +List<String?>? friendList
  +List<String?>? friendReqList
  +List<String?>? myComments
  +List<String?>? myPosts
  +List<String?>? myLikedComments
  +List<String?>? myLikedPosts
  +void initState()
  +void dispose()
  +void loadProfile()
  +Widget build()
  +Widget buildTop()
  +Widget buildCoverImage()
  +Widget buildProfileImage()
  +Widget buildProfileInfo()
  +Widget buildFriendButton()
  +Widget buildTabBarSection()
  +Widget showModule()
  +Widget showFriendsTab()
  +void updateFriendRequestStatus()
}

"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "dart::async::StreamSubscription<DocumentSnapshot<Object>>"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState"

class "brainsync::pages::Profile::friends.dart::FriendListPage" {
  +List<UserProfile?> friendList
  +State<FriendListPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::friends.dart::FriendListPage"

class "brainsync::pages::Profile::friends.dart::_FriendListPageState" {
  -DatabaseService _databaseService
  +String? userProfilePfp
  +String? userProfileCover
  +String? firstName
  +String? lastName
  +List<dynamic>? friendReqList
  +void initState()
  +Widget build()
  +void loadProfile()
}

"brainsync::pages::Profile::friends.dart::_FriendListPageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::friends.dart::_FriendListPageState"

class "brainsync::pages::Chats::chat_page.dart::ChatPage" {
  +UserProfile chatUser
  +State<ChatPage> createState()
}

"brainsync::pages::Chats::chat_page.dart::ChatPage" o-- "brainsync::model::user_profile.dart::UserProfile"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Chats::chat_page.dart::ChatPage"

class "brainsync::pages::Chats::chat_page.dart::_ChatPageState" {
  -GetIt _getIt
  -AuthService _authService
  -DatabaseService _databaseService
  -MediaService _mediaService
  -NavigationService _navigationService
  -StorageService _storageService
  +UserProfile otherUser
  +ChatUser? currentUser
  +ChatUser? otherChatUser
  +void initState()
  -void _initializeServices()
  -void _initializeUsers()
  +Widget build()
  +Widget header()
  +Widget buildUI()
  -dynamic _sendMessage()
  -List<ChatMessage> _generateChatMessagesList()
  +Widget mediaMessageButton()
  -dynamic _uploadAndSendMediaMessage()
}

"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::media_service.dart::MediaService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::storage_service.dart::StorageService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::model::user_profile.dart::UserProfile"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "dash_chat_2::dash_chat_2.dart::ChatUser"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Chats::chat_page.dart::_ChatPageState"

class "brainsync::pages::Chats::friends_chat.dart::FriendsChats" {
  +FriendsChatsState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Chats::friends_chat.dart::FriendsChats"

class "brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" {
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +dynamic listenedToChats
  +dynamic loadedProfile
  +List<String>? chats
  +String? userProfilePfp
  +String? firstName
  +String? lastName
  +StreamSubscription<DocumentSnapshot<Object?>>? profileSubscription
  +StreamSubscription<QuerySnapshot<Object?>>? chatsSubscription
  +Map<String, String> chatSubtitles
  +Map<String, Timestamp?> lastMessageTimestamps
  +void initState()
  +void dispose()
  +dynamic loadProfile()
  +dynamic listenToChats()
  +void updateChatSubtitle()
  +Widget build()
}

"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "dart::async::StreamSubscription<DocumentSnapshot<Object>>"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "dart::async::StreamSubscription<QuerySnapshot<Object>>"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Chats::friends_chat.dart::FriendsChatsState"

class "brainsync::pages::Administation::login.dart::LoginPage" {
  +State<LoginPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Administation::login.dart::LoginPage"

class "brainsync::pages::Administation::login.dart::_LoginPageState" {
  -bool _isLoading
  -GetIt _getIt
  -NavigationService _navigationService
  +void initState()
  +Widget build()
  +Widget buildUI()
  +Widget headerText()
  +Widget createAnAccount()
  +Widget buildLoadingScreen()
}

"brainsync::pages::Administation::login.dart::_LoginPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Administation::login.dart::_LoginPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Administation::login.dart::_LoginPageState"

class "brainsync::pages::Administation::register.dart::RegisterPage" {
  +State<RegisterPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Administation::register.dart::RegisterPage"

class "brainsync::pages::Administation::register.dart::_RegisterPageState" {
  +String? name
  +String? email
  +String? password
  -GetIt _getIt
  -NavigationService _navigationService
  +File? selectedImage
  +String? errorMessage
  +bool isLoading
  +void initState()
  +Widget build()
}

"brainsync::pages::Administation::register.dart::_RegisterPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Administation::register.dart::_RegisterPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Administation::register.dart::_RegisterPageState" o-- "dart::io::File"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Administation::register.dart::_RegisterPageState"

class "brainsync::pages::Administation::forget_password.dart::ForgetPassword" {
  +State<ForgetPassword> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Administation::forget_password.dart::ForgetPassword"

class "brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" {
  -GetIt _getIt
  -TextEditingController _emailController
  -AlertService _alertService
  -NavigationService _navigationService
  +String? errorMessage
  +void initState()
  +dynamic sendPasswordResetEmail()
  +Widget sendButton()
  +Widget entryField()
  +Widget build()
}

"brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState"

class "brainsync::pages::Modules::module_page.dart::ModulePage" {
  +dynamic moduleInfo
  +State<ModulePage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Modules::module_page.dart::ModulePage"

class "brainsync::pages::Modules::module_page.dart::_ModulePageState" {
  +String? acadYear
  +String? preclusion
  +String? description
  +String? title
  +String? department
  +String? faculty
  +String? prerequisite
  +String? moduleCredit
  +String? moduleCode
  -GetIt _getIt
  -AuthService _authService
  -AlertService _alertService
  -DatabaseService _databaseService
  +bool modulesAdded
  +bool? current
  +bool? completed
  +String? userId
  +TextStyle labelStyle
  +TextStyle sectionTitleStyle
  +void initState()
  +void didUpdateWidget()
  +void initialiseValues()
  +dynamic addToSchedule()
  +dynamic removeFromSchedule()
  +Widget build()
  +Widget buildHeader()
  +Widget buildDisabledButton()
  +Widget buildActiveButton()
  +Widget buildTitle()
  +Widget buildDetails()
  +Widget buildDetailSection()
  +Widget buildRow()
  +Widget buildDescription()
}

"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Modules::module_page.dart::_ModulePageState"

class "brainsync::pages::Modules::all_mods.dart::ModuleListPage" {
  +_ModuleListPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Modules::all_mods.dart::ModuleListPage"

class "brainsync::pages::Modules::all_mods.dart::_ModuleListPageState" {
  +dynamic futureModules
  +List<Module> filteredModules
  +TextEditingController searchController
  -NavigationService _navigationService
  -GetIt _getIt
  +String acadYear
  +void initState()
  +void dispose()
  +String getCurrentAcadYear()
  +dynamic navigateToModuleDetails()
  +void filterModules()
  +void clearSearch()
  +Widget build()
}

"brainsync::pages::Modules::all_mods.dart::_ModuleListPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Modules::all_mods.dart::_ModuleListPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Modules::all_mods.dart::_ModuleListPageState" o-- "get_it::get_it.dart::GetIt"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Modules::all_mods.dart::_ModuleListPageState"

class "brainsync::services::navigation_service.dart::NavigationService" {
  -GlobalKey<NavigatorState> _navigatorKey
  -Map<String, Widget Function(BuildContext)> _routes
  +Map<String, Widget Function(BuildContext)> routes
  +GlobalKey<NavigatorState>? navigatorKey
  +void goBack()
  +dynamic pushName()
  +dynamic pushReplacementName()
  +dynamic pushNameFuture()
  +void push()
}

"brainsync::services::navigation_service.dart::NavigationService" o-- "flutter::src::widgets::framework.dart::GlobalKey<NavigatorState>"

class "brainsync::services::database_service.dart::DatabaseService" {
  -FirebaseFirestore _firebaseFirestore
  -GetIt _getIt
  -CollectionReference<UserProfile>? _usersCollection
  -CollectionReference<Object?>? _chatCollection
  -CollectionReference<Object?>? _postCollection
  -AlertService _alertService
  -AuthService _authService
  +void setUpCollectionReferences()
  +dynamic createUserProfile()
  +dynamic updateProfile()
  +dynamic fetchCurrentUser()
  +dynamic fetchUser()
  +dynamic fetchUserProfile()
  +Stream<DocumentSnapshot<Object?>> getUserProfile()
  +Stream<QuerySnapshot<UserProfile>> getUserProfiles()
  +dynamic checkChatExist()
  +dynamic createNewChat()
  +dynamic getChatDetails()
  +Stream<QuerySnapshot<Object?>> getAllUserChatsStream()
  +dynamic sendChatMessage()
  +Stream<dynamic> getChatData()
  +dynamic acceptFriendRequest()
  +dynamic cancelFriendRequest()
  +dynamic getFriends()
  +dynamic getMutualFriends()
  +dynamic rejectFriendRequest()
  +dynamic removeFriend()
  +dynamic sendFriendRequest()
  +dynamic addModuleToUserSchedule()
  +dynamic isInCompletedModule()
  +dynamic isInCurrentModule()
  +dynamic removeModule()
  +dynamic createNewPost()
  +dynamic fetchPosts()
  +dynamic fetchPost()
  +dynamic fetchBookmarkedPosts()
  +dynamic fetchUserPosts()
  +dynamic addBookmark()
  +dynamic removeBookmark()
  +dynamic likePost()
  +dynamic dislikePost()
  +dynamic addNewcomment()
  +dynamic likeComment()
  +dynamic dislikeComment()
}

"brainsync::services::database_service.dart::DatabaseService" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"brainsync::services::database_service.dart::DatabaseService" o-- "get_it::get_it.dart::GetIt"
"brainsync::services::database_service.dart::DatabaseService" o-- "cloud_firestore::cloud_firestore.dart::CollectionReference<UserProfile>"
"brainsync::services::database_service.dart::DatabaseService" o-- "cloud_firestore::cloud_firestore.dart::CollectionReference<Object>"
"brainsync::services::database_service.dart::DatabaseService" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::services::database_service.dart::DatabaseService" o-- "brainsync::services::auth_service.dart::AuthService"

class "brainsync::services::media_service.dart::MediaService" {
  -ImagePicker _picker
  +dynamic getImageFromGallery()
  +dynamic pickImage()
}

"brainsync::services::media_service.dart::MediaService" o-- "image_picker::image_picker.dart::ImagePicker"

class "brainsync::services::auth_service.dart::AuthService" {
  -CollectionReference<UserProfile>? _usersCollection
  -FirebaseAuth _firebaseAuth
  -FirebaseFirestore _firebaseFirestore
  +List<String?> friendReqList
  +List<String?> friendList
  +List<String?> completedModules
  +List<String?> currentModules
  +List<String?> chats
  +String lastName
  +String selectedYear
  -User? _user
  +User? currentUser
  +User? user
  +void setUpCollectionReferences()
  +dynamic login()
  +dynamic signInWithGoogle()
  +dynamic signOut()
  +dynamic createUser()
  +dynamic register()
  +dynamic sendEmailVerification()
  +dynamic getUserProfile()
  +dynamic createUserProfile()
  +dynamic checkIfUserExists()
}

"brainsync::services::auth_service.dart::AuthService" o-- "cloud_firestore::cloud_firestore.dart::CollectionReference<UserProfile>"
"brainsync::services::auth_service.dart::AuthService" o-- "firebase_auth::firebase_auth.dart::FirebaseAuth"
"brainsync::services::auth_service.dart::AuthService" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"brainsync::services::auth_service.dart::AuthService" o-- "firebase_auth::firebase_auth.dart::User"

class "brainsync::services::api_service.dart::ApiService" {
  {static} +String baseUrl
  {static} +String apiVersion
  {static} +dynamic fetchModuleInfo()
  {static} +dynamic fetchModules()
  +String getCurrentAcadYear()
}

class "brainsync::services::alert_service.dart::AlertService" {
  -GetIt _getIt
  -NavigationService _navigationService
  +void showToast()
}

"brainsync::services::alert_service.dart::AlertService" o-- "get_it::get_it.dart::GetIt"
"brainsync::services::alert_service.dart::AlertService" o-- "brainsync::services::navigation_service.dart::NavigationService"

class "brainsync::services::storage_service.dart::StorageService" {
  -GetIt _getIt
  -FirebaseStorage _fireBaseStorage
  -FirebaseFirestore _firestore
  -AuthService _authService
  -AlertService _alertService
  +dynamic uploadUserProfile()
  +dynamic uploadUserCover()
  +dynamic saveData()
  +dynamic uploadImageToChat()
}

"brainsync::services::storage_service.dart::StorageService" o-- "get_it::get_it.dart::GetIt"
"brainsync::services::storage_service.dart::StorageService" o-- "firebase_storage::firebase_storage.dart::FirebaseStorage"
"brainsync::services::storage_service.dart::StorageService" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"brainsync::services::storage_service.dart::StorageService" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::services::storage_service.dart::StorageService" o-- "brainsync::services::alert_service.dart::AlertService"


@enduml
junlinchan@JunLins-MBP common_widgets % flutter pub run dcdg --output-format png
Changing current working directory to: /Users/junlinchan/development/brainSync
Deprecated. Use `dart run` instead.
Unhandled exception:
FormatException: Could not find an option named "output-format".
#0      Parser._validate (package:args/src/parser.dart:311:21)
#1      Parser._handleLongOption (package:args/src/parser.dart:300:7)
#2      Parser._parseLongOption (package:args/src/parser.dart:264:12)
#3      Parser.parse (package:args/src/parser.dart:86:11)
#4      ArgParser.parse (package:args/src/arg_parser.dart:334:42)
#5      new Configuration.fromCommandLine (package:dcdg/src/configuration.dart:95:31)
#6      main (file:///Users/junlinchan/.pub-cache/hosted/pub.dev/dcdg-4.1.0/bin/dcdg.dart:9:32)
#7      _delayEntrypointInvocation.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:295:33)
#8      _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:184:12)
junlinchan@JunLins-MBP common_widgets % flutter pub run dcdg
Changing current working directory to: /Users/junlinchan/development/brainSync
Deprecated. Use `dart run` instead.
@startuml
set namespaceSeparator ::

class "brainsync::miscellaneous::firebase_options.dart::DefaultFirebaseOptions" {
  {static} +FirebaseOptions web
  {static} +FirebaseOptions android
  {static} +FirebaseOptions ios
  {static} +FirebaseOptions macos
  {static} +FirebaseOptions windows
  {static} +FirebaseOptions currentPlatform
}

"brainsync::miscellaneous::firebase_options.dart::DefaultFirebaseOptions" o-- "firebase_core_platform_interface::firebase_core_platform_interface.dart::FirebaseOptions"

class "brainsync::miscellaneous::main.dart::MyApp" {
  -GetIt _getIt
  +State<MyApp> createState()
}

"brainsync::miscellaneous::main.dart::MyApp" o-- "get_it::get_it.dart::GetIt"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::miscellaneous::main.dart::MyApp"

class "brainsync::miscellaneous::main.dart::_MyAppState" {
  -GetIt _getIt
  -AuthService _authService
  -AlertService _alertService
  +StreamSubscription<User?> user
  -NavigationService _navigationService
  +void initState()
  +void dispose()
  +Widget build()
}

"brainsync::miscellaneous::main.dart::_MyAppState" o-- "get_it::get_it.dart::GetIt"
"brainsync::miscellaneous::main.dart::_MyAppState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::miscellaneous::main.dart::_MyAppState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::miscellaneous::main.dart::_MyAppState" o-- "dart::async::StreamSubscription<User>"
"brainsync::miscellaneous::main.dart::_MyAppState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::miscellaneous::main.dart::_MyAppState"

class "brainsync::model::post.dart::Post" {
  +int? commentCount
  +List<dynamic>? likes
  +String? authorName
  +String? content
  +String? id
  +String? title
  +Timestamp? timestamp
  +Map<String, dynamic> toJson()
}

"brainsync::model::post.dart::Post" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "brainsync::model::message.dart::Message" {
  +String? senderID
  +String? content
  +MessageType? messageType
  +Timestamp? sentAt
  +Map<String, dynamic> toJson()
}

"brainsync::model::message.dart::Message" o-- "brainsync::model::message.dart::MessageType"
"brainsync::model::message.dart::Message" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "brainsync::model::message.dart::MessageType" {
  +int index
  {static} +List<MessageType> values
  {static} +MessageType Text
  {static} +MessageType Image
}

"brainsync::model::message.dart::MessageType" o-- "brainsync::model::message.dart::MessageType"
"dart::core::Enum" <|-- "brainsync::model::message.dart::MessageType"

class "brainsync::model::time.dart::CustomShortMessages" {
  +String prefixAgo()
  +String prefixFromNow()
  +String suffixAgo()
  +String suffixFromNow()
  +String lessThanOneMinute()
  +String aboutAMinute()
  +String minutes()
  +String aboutAnHour()
  +String hours()
  +String aDay()
  +String days()
  +String aboutAMonth()
  +String months()
  +String aboutAYear()
  +String years()
  +String wordSeparator()
}

"timeago::src::messages::lookupmessages.dart::LookupMessages" <|-- "brainsync::model::time.dart::CustomShortMessages"

class "brainsync::model::module.dart::Module" {
  +String code
  +String title
  +int? credits
}

class "brainsync::model::user_profile.dart::UserProfile" {
  +String? bio
  +String? firstName
  +String? lastName
  +String? pfpURL
  +String? profileCoverURL
  +String? uid
  +String? year
  +List<String?>? bookmarks
  +List<String?>? chats
  +List<String?>? completedModules
  +List<String?>? currentModules
  +List<String?>? friendList
  +List<String?>? friendReqList
  +List<String?>? myComments
  +List<String?>? myPosts
  +List<String?>? myLikedComments
  +List<String?>? myLikedPosts
  +Map<String, dynamic> toJson()
}

class "brainsync::model::comment.dart::Comment" {
  +String? authorID
  +String? content
  +List<String?>? likes
  +Timestamp? timestamp
  +Map<String, dynamic> toJson()
}

"brainsync::model::comment.dart::Comment" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "brainsync::model::chat.dart::Chat" {
_  +String? id
  +List<String>? participantsNames
  +List<String>? participantsIds
  +List<Message>? messages
  +Message? lastMessage
  +Timestamp? createdAt
  +Timestamp? updatedAt
  +bool? isGroupChat
  +int? unreadCount
  +Map<String, dynamic> toJson()
}

"brainsync::model::chat.dart::Chat" o-- "brainsync::model::message.dart::Message"
"brainsync::model::chat.dart::Chat" o-- "cloud_firestore_platform_interface::src::timestamp.dart::Timestamp"

class "brainsync::common_widgets::square_tile.dart::SquareTile" {
  +String imagePath
  +void Function() onTap
  +String? label
  +Widget build()
}

"brainsync::common_widgets::square_tile.dart::SquareTile" o-- "null::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::common_widgets::square_tile.dart::SquareTile"

class "brainsync::common_widgets::edit_list_field.dart::CustomListField" {
  +List<dynamic>? modulesList
  +String moduleType
  +bool isEditable
  +_CustomListFieldState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::edit_list_field.dart::CustomListField"

class "brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" {
  -GetIt _getIt
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +List<TextEditingController> moduleController
  +void initState()
  +void dispose()
  +void removeModule()
  +List<String> getUpdatedModuleList()
  +Widget build()
  +Widget buildSectionTitle()
  +Widget buildModulesList()
}

"brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" o-- "get_it::get_it.dart::GetIt"
"brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::edit_list_field.dart::_CustomListFieldState"

class "brainsync::common_widgets::search_bar.dart::CustomSearch" {
  +List<String> searchTerms
  +List<Widget> buildActions()
  +Widget buildLeading()
  +Widget buildResults()
  +Widget buildSuggestions()
}

"flutter::src::material::search.dart::SearchDelegate" <|-- "brainsync::common_widgets::search_bar.dart::CustomSearch"

class "brainsync::common_widgets::home_post_card.dart::HomePostCard" {
  +String? postId
  +State<HomePostCard> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::home_post_card.dart::HomePostCard"

class "brainsync::common_widgets::home_post_card.dart::_HomePostCardState" {
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  +bool? isLiked
  +bool? isBookmarked
  +DateTime? timeStamp
  +int? commentCount
  +int? likeCount
  +String? title
  +String? content
  +String? authorName
  +String? postId
  +String? timeAgo
  +List<dynamic>? bookmarks
  +List<dynamic>? likes
  +dynamic loadedProfile
  +void initState()
  +void dispose()
  +dynamic loadProfile()
  +Widget build()
  +Widget buildCard()
  +void likePost()
  +void dislikePost()
  +dynamic bookmark()
}

"brainsync::common_widgets::home_post_card.dart::_HomePostCardState" o-- "get_it::get_it.dart::GetIt"
"brainsync::common_widgets::home_post_card.dart::_HomePostCardState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::common_widgets::home_post_card.dart::_HomePostCardState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::common_widgets::home_post_card.dart::_HomePostCardState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::home_post_card.dart::_HomePostCardState"

class "brainsync::common_widgets::friend_request_card.dart::FriendRequestCard" {
  +dynamic userData
  +State<FriendRequestCard> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::friend_request_card.dart::FriendRequestCard"

class "brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" {
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +dynamic userData
  +List<dynamic> friendReqList
  +dynamic loadedProfile
  +void initState()
  +Widget build()
  +dynamic loadProfile()
}

"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "get_it::get_it.dart::GetIt"
"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::friend_request_card.dart::_FriendRequestCardState"

class "brainsync::common_widgets::navBar.dart::NavBar" {
  +State<NavBar> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::navBar.dart::NavBar"

class "brainsync::common_widgets::navBar.dart::_NavBarState" {
  -AlertService _alertService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +String? userProfilePfp
  +String? userProfileCover
  +String? firstName
  +String? lastName
  +List<dynamic>? friendReqList
  +List<dynamic>? currentModules
  +List<dynamic>? completedModules
  -GetIt _getIt
  +void initState()
  +Widget build()
  +void loadProfile()
}

"brainsync::common_widgets::navBar.dart::_NavBarState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::common_widgets::navBar.dart::_NavBarState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::common_widgets::navBar.dart::_NavBarState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::common_widgets::navBar.dart::_NavBarState" o-- "get_it::get_it.dart::GetIt"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::navBar.dart::_NavBarState"

class "brainsync::common_widgets::module_card.dart::ModuleTile" {
  +Module module
  +Function onTap
  +Widget build()
}

"brainsync::common_widgets::module_card.dart::ModuleTile" o-- "brainsync::model::module.dart::Module"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::common_widgets::module_card.dart::ModuleTile"

class "brainsync::common_widgets::chat_tile.dart::CustomChatTile" {
  +String title
  +String? subtitle
  +Widget leading
  +void Function() onTap
  +Widget build()
}

"brainsync::common_widgets::chat_tile.dart::CustomChatTile" o-- "flutter::src::widgets::framework.dart::Widget"
"brainsync::common_widgets::chat_tile.dart::CustomChatTile" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::common_widgets::chat_tile.dart::CustomChatTile"

class "brainsync::common_widgets::dialog.dart::CustomDialog" {
  {static} +void show()
}

class "brainsync::common_widgets::post_card.dart::PostCard" {
  +String postId
  +Map<String, dynamic> postData
  +void Function() onLikeChanged
  +_PostCardState createState()
}

"brainsync::common_widgets::post_card.dart::PostCard" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::post_card.dart::PostCard"

class "brainsync::common_widgets::post_card.dart::_PostCardState" {
  -GetIt _getIt
  -AuthService _authService
  -DatabaseService _databaseService
  +void initState()
  +Widget build()
}

"brainsync::common_widgets::post_card.dart::_PostCardState" o-- "get_it::get_it.dart::GetIt"
"brainsync::common_widgets::post_card.dart::_PostCardState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::common_widgets::post_card.dart::_PostCardState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::post_card.dart::_PostCardState"

class "brainsync::common_widgets::user_tile.dart::UserTile" {
  +UserProfile userProfile
  +Function onTap
  +Widget build()
}

"brainsync::common_widgets::user_tile.dart::UserTile" o-- "brainsync::model::user_profile.dart::UserProfile"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::common_widgets::user_tile.dart::UserTile"

class "brainsync::common_widgets::custom_form_field.dart::CustomFormField" {
  +String labelText
  +String hintText
  +double height
  +RegExp validationRegEx
  +void Function(String?) onSaved
  +bool obscureText
  +Widget? suffixIcon
  +CustomFormFieldState createState()
}

"brainsync::common_widgets::custom_form_field.dart::CustomFormField" o-- "null::void Function(String)"
"brainsync::common_widgets::custom_form_field.dart::CustomFormField" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::custom_form_field.dart::CustomFormField"

class "brainsync::common_widgets::custom_form_field.dart::CustomFormFieldState" {
  -bool _obscureText
  +void initState()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::custom_form_field.dart::CustomFormFieldState"

class "brainsync::common_widgets::bottomBar.dart::CustomBottomNavBar" {
  +int initialIndex
  +CustomBottomNavBarState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::bottomBar.dart::CustomBottomNavBar"

class "brainsync::common_widgets::bottomBar.dart::CustomBottomNavBarState" {
  -NavigationService _navigationService
  +Widget build()
}

"brainsync::common_widgets::bottomBar.dart::CustomBottomNavBarState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::bottomBar.dart::CustomBottomNavBarState"

class "brainsync::common_widgets::edit_text_field.dart::CustomTextField" {
  +TextEditingController textController
  +String labelText
  +double vertical
  +double horizontal
  +int maxLines
  +State<CustomTextField> createState()
}

"brainsync::common_widgets::edit_text_field.dart::CustomTextField" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::common_widgets::edit_text_field.dart::CustomTextField"

class "brainsync::common_widgets::edit_text_field.dart::_CustomTextFieldState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "brainsync::common_widgets::edit_text_field.dart::_CustomTextFieldState"

class "brainsync::pages::home.dart::Home" {
  +State<Home> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::home.dart::Home"

class "brainsync::pages::home.dart::_HomeState" {
  -GetIt _getIt
  -AlertService _alertService
  -DatabaseService _databaseService
  +TextEditingController searchQuery
  +dynamic allPostsFuture
  +List<DocumentSnapshot<Object?>> allPosts
  +List<DocumentSnapshot<Object?>> filteredPosts
  +List<dynamic> bookmarks
  +void initState()
  +void dispose()
  +dynamic fetchPosts()
  -void _onSearchChanged()
  +dynamic loadProfile()
  +void clearSearch()
  +Widget build()
}

"brainsync::pages::home.dart::_HomeState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::home.dart::_HomeState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::home.dart::_HomeState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::home.dart::_HomeState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::home.dart::_HomeState"
"flutter::src::widgets::routes.dart::RouteAware" <|-- "brainsync::pages::home.dart::_HomeState"

class "brainsync::pages::form::signup_form.dart::SignUpForm" {
  +State<SignUpForm> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::form::signup_form.dart::SignUpForm"

class "brainsync::pages::form::signup_form.dart::SignUpFormState" {
  +String? bio
  +String? firstName
  +String? lastName
  +String? email
  +String? password
  +String? repassword
  +String? selectedYear
  +List<String>? chats
  +List<String>? friendList
  +List<String>? friendReqList
  +List<String>? currentModules
  +List<String>? completedModules
  +List<String>? myComments
  +List<String>? myPosts
  -GetIt _getIt
  -GlobalKey<FormState> _signupFormKey
  -AuthService _authService
  -NavigationService _navigationService
  -AlertService _alertService
  -DatabaseService _databaseService
  +bool isLoading
  +void initState()
  +List<String> getYearOptions()
  +Widget build()
}

"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::form::signup_form.dart::SignUpFormState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::form::signup_form.dart::SignUpFormState"

class "brainsync::pages::form::form_header.dart::FormHeader" {
  +String title
  +String subTitle
  +Image image
  +Widget build()
}

"brainsync::pages::form::form_header.dart::FormHeader" o-- "flutter::src::widgets::image.dart::Image"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::pages::form::form_header.dart::FormHeader"

class "brainsync::pages::form::login_form.dart::LoginForm" {
  +dynamic Function(bool) setLoading
  +Function navigateToHome
  +State<LoginForm> createState()
}

"brainsync::pages::form::login_form.dart::LoginForm" o-- "null::dynamic Function(bool)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::form::login_form.dart::LoginForm"

class "brainsync::pages::form::login_form.dart::_LoginFormState" {
  -GlobalKey<FormState> _loginFormKey
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  +String? email
  +String? password
  -bool _obscurePassword
  +void initState()
  +Widget build()
  +Widget forgetPassword()
}

"brainsync::pages::form::login_form.dart::_LoginFormState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"brainsync::pages::form::login_form.dart::_LoginFormState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::form::login_form.dart::_LoginFormState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::form::login_form.dart::_LoginFormState" o-- "brainsync::services::auth_service.dart::AuthService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::form::login_form.dart::_LoginFormState"

class "brainsync::pages::Posts::bookmarked_posts.dart::BookmarkedPosts" {
  +_BookmarkedPostsState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Posts::bookmarked_posts.dart::BookmarkedPosts"

class "brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" {
  -GetIt _getIt
  -Map<String, bool> _bookmarks
  +String userID
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +dynamic bookmarkedPosts
  +dynamic loadedBookmarks
  +void initState()
  +dynamic loadBookmarks()
  +void didChangeDependencies()
  +Widget build()
}

"brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Posts::bookmarked_posts.dart::_BookmarkedPostsState"

class "brainsync::pages::Posts::post.dart::PostsPage" {
  +_PostsPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Posts::post.dart::PostsPage"

class "brainsync::pages::Posts::post.dart::_PostsPageState" {
  +String? userProfilePfp
  +String? name
  -TextEditingController _titleController
  -TextEditingController _contentController
  -GlobalKey<FormState> _formKey
  -GetIt _getIt
  -LanguageChecker _checker
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +dynamic futureModules
  +List<Module> filteredModules
  -Timer? _debounce
  +void initState()
  +void dispose()
  +void onTitleChanged()
  +void filterModules()
  +bool isValidModuleCode()
  +dynamic createPost()
  +Widget discardButton()
  +Widget sendButton()
  +Widget buildSuggestionList()
  +Widget build()
}

"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "badword_guard::badword_guard.dart::LanguageChecker"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Posts::post.dart::_PostsPageState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Posts::post.dart::_PostsPageState"

class "brainsync::pages::Posts::comment_card.dart::CommentCard" {
  +String authorName
  +String content
  +String formattedDate
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "brainsync::pages::Posts::comment_card.dart::CommentCard"

class "brainsync::pages::Posts::actual_post.dart::PostDetailPage" {
  +String postId
  +String title
  +String content
  +DateTime timestamp
  +String authorName
  +_PostDetailPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Posts::actual_post.dart::PostDetailPage"

class "brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" {
  -GetIt _getIt
  +String userId
  -AuthService _authService
  -DatabaseService _databaseService
  -AlertService _alertService
  +String? currentUser
  -TextEditingController _commentController
  +LanguageChecker checker
  +void initState()
  +void loadProfile()
  +dynamic addComment()
  +dynamic likeComment()
  +dynamic dislikeComment()
  +Widget build()
}

"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Posts::actual_post.dart::_PostDetailPageState" o-- "badword_guard::badword_guard.dart::LanguageChecker"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Posts::actual_post.dart::_PostDetailPageState"

class "brainsync::pages::notifications.dart::Notifications" {
  +State<Notifications> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::notifications.dart::Notifications"

class "brainsync::pages::notifications.dart::_NotificationsState" {
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  +String firstName
  +String lastName
  +bool isFriendRequestSent
  +List<dynamic>? friendReqList
  +bool isFriend
  +StreamSubscription<DocumentSnapshot<Object?>> friendRequestStream
  +void initState()
  +void dispose()
  +Widget build()
  +Widget buildNotifications()
  +Widget buildFriendRequestTile()
  +void loadProfile()
}

"brainsync::pages::notifications.dart::_NotificationsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::notifications.dart::_NotificationsState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::notifications.dart::_NotificationsState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::notifications.dart::_NotificationsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::notifications.dart::_NotificationsState" o-- "dart::async::StreamSubscription<DocumentSnapshot<Object>>"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::notifications.dart::_NotificationsState"

class "brainsync::pages::Profile::profile.dart::Profile" {
  +State<Profile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::profile.dart::Profile"

class "brainsync::pages::Profile::profile.dart::_ProfileState" {
  +double coverHeight
  +double profileHeight
  -GetIt _getIt
  +Uint8List? pickedImage
  +File? selectedImage
  +int? currentCredits
  +String? bio
  +String? firstName
  +String? lastName
  +String? pfpURL
  +String? profileCoverURL
  +String? uid
  +String? year
  +List<String?>? chats
  +List<String?>? completedModules
  +List<String?>? currentModules
  +List<String?>? friendList
  +List<String?>? friendReqList
  +List<String?>? myComments
  +List<String?>? myPosts
  +List<String?>? myLikedComments
  +List<String?>? myLikedPosts
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +DocumentSnapshot<Object?> user
  +dynamic loadedProfile
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  +void didPopNext()
  +dynamic loadProfile()
  +Widget build()
  +Widget buildProfile()
  +Widget buildTop()
  +Widget buildCoverImage()
  +Widget buildProfileImage()
  +Widget buildSignOutButton()
  +Widget buildProfileInfo()
  +Widget editProfileButton()
  +Widget buildTabBarSection()
  +Widget showModule()
  +Widget showPost()
  +Widget showFriends()
}

"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "dart::typed_data::Uint8List"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "dart::io::File"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Profile::profile.dart::_ProfileState" o-- "cloud_firestore::cloud_firestore.dart::DocumentSnapshot<Object>"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::profile.dart::_ProfileState"
"flutter::src::widgets::routes.dart::RouteAware" <|-- "brainsync::pages::Profile::profile.dart::_ProfileState"

class "brainsync::pages::Profile::about_me.dart::AboutMe" {
  +State<AboutMe> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::about_me.dart::AboutMe"

class "brainsync::pages::Profile::about_me.dart::_AboutMeState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::about_me.dart::_AboutMeState"

class "brainsync::pages::Profile::show_my_friends.dart::ShowMyFriends" {
  +State<ShowMyFriends> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::show_my_friends.dart::ShowMyFriends"

class "brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState" {
  -GetIt _getIt
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +void initState()
  +Widget build()
}

"brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::show_my_friends.dart::_ShowMyFriendsState"

class "brainsync::pages::Profile::show_my_modules.dart::ShowModule" {
  +List<String?>? currentModules
  +List<String?>? completedModules
  +State<ShowModule> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::show_my_modules.dart::ShowModule"

class "brainsync::pages::Profile::show_my_modules.dart::_ShowModuleState" {
  +num totalCurrentCredit
  +num totalCompletedCredit
  -GetIt _getIt
  -NavigationService _navigationService
  +void initState()
  +void calculateTotalCredits()
  +Widget build()
  +Widget buildSectionTitle()
  +Widget buildModulesList()
  +Widget displayTotalCredits()
}

"brainsync::pages::Profile::show_my_modules.dart::_ShowModuleState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::show_my_modules.dart::_ShowModuleState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::show_my_modules.dart::_ShowModuleState"

class "brainsync::pages::Profile::show_my_posts.dart::ShowMyPosts" {
  +List<String?>? myPosts
  +State<ShowMyPosts> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::show_my_posts.dart::ShowMyPosts"

class "brainsync::pages::Profile::show_my_posts.dart::_ShowMyPostsState" {
  -GetIt _getIt
  -DatabaseService _databaseService
  +void initState()
  +Widget build()
}

"brainsync::pages::Profile::show_my_posts.dart::_ShowMyPostsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::show_my_posts.dart::_ShowMyPostsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::show_my_posts.dart::_ShowMyPostsState"

class "brainsync::pages::Profile::edit_profile.dart::EditProfilePage" {
  +_EditProfilePageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::edit_profile.dart::EditProfilePage"

class "brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" {
  +double coverHeight
  +double profileHeight
  -GlobalKey<FormState> _formKey
  -GetIt _getIt
  +TextEditingController firstNameController
  +TextEditingController lastNameController
  +TextEditingController bioController
  +TextEditingController yearController
  +File? selectedCoverImage
  +File? selectedProfileImage
  +String? userProfilePfp
  +String? userProfileCover
  +List<dynamic>? friendReqList
  +List<dynamic>? currentModules
  +List<dynamic>? completedModules
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -MediaService _mediaService
  -NavigationService _navigationService
  -StorageService _storageService
  +dynamic loadedProfile
  +String? selectedYear
  +List<String> getYearOptions()
  +void initState()
  +void didChangeDependencies()
  +void dispose()
  +void didPopNext()
  +dynamic loadProfile()
  +void saveProfile()
  +Widget build()
  +Widget buildProfile()
  +Widget buildTop()
  +Widget buildCoverImage()
  +Widget buildProfileImage()
  +Widget buildProfileInfo()
  +Widget editProfile()
  +Widget cancelEdit()
}

"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "dart::io::File"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::media_service.dart::MediaService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState" o-- "brainsync::services::storage_service.dart::StorageService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState"
"flutter::src::widgets::routes.dart::RouteAware" <|-- "brainsync::pages::Profile::edit_profile.dart::_EditProfilePageState"

class "brainsync::pages::Profile::visiting_profile.dart::VisitProfile" {
  +String userId
  +State<VisitProfile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::visiting_profile.dart::VisitProfile"

class "brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" {
  +bool isFriendRequestSent
  +bool isFriend
  +FirebaseFirestore firestore
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +StreamSubscription<DocumentSnapshot<Object?>> profileStream
  +String? bio
  +String? firstName
  +String? lastName
  +String? pfpURL
  +String? profileCoverURL
  +String? uid
  +String? year
  +List<String?>? chats
  +List<String?>? completedModules
  +List<String?>? currentModules
  +List<String?>? friendList
  +List<String?>? friendReqList
  +List<String?>? myComments
  +List<String?>? myPosts
  +List<String?>? myLikedComments
  +List<String?>? myLikedPosts
  +void initState()
  +void dispose()
  +void loadProfile()
  +Widget build()
  +Widget buildTop()
  +Widget buildCoverImage()
  +Widget buildProfileImage()
  +Widget buildProfileInfo()
  +Widget buildFriendButton()
  +Widget buildTabBarSection()
  +Widget showModule()
  +Widget showFriendsTab()
  +void updateFriendRequestStatus()
}

"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState" o-- "dart::async::StreamSubscription<DocumentSnapshot<Object>>"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::visiting_profile.dart::_VisitProfileState"

class "brainsync::pages::Profile::friends.dart::FriendListPage" {
  +List<UserProfile?> friendList
  +State<FriendListPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Profile::friends.dart::FriendListPage"

class "brainsync::pages::Profile::friends.dart::_FriendListPageState" {
  -DatabaseService _databaseService
  +String? userProfilePfp
  +String? userProfileCover
  +String? firstName
  +String? lastName
  +List<dynamic>? friendReqList
  +void initState()
  +Widget build()
  +void loadProfile()
}

"brainsync::pages::Profile::friends.dart::_FriendListPageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Profile::friends.dart::_FriendListPageState"

class "brainsync::pages::Chats::chat_page.dart::ChatPage" {
  +UserProfile chatUser
  +State<ChatPage> createState()
}

"brainsync::pages::Chats::chat_page.dart::ChatPage" o-- "brainsync::model::user_profile.dart::UserProfile"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Chats::chat_page.dart::ChatPage"

class "brainsync::pages::Chats::chat_page.dart::_ChatPageState" {
  -GetIt _getIt
  -AuthService _authService
  -DatabaseService _databaseService
  -MediaService _mediaService
  -NavigationService _navigationService
  -StorageService _storageService
  +UserProfile otherUser
  +ChatUser? currentUser
  +ChatUser? otherChatUser
  +void initState()
  -void _initializeServices()
  -void _initializeUsers()
  +Widget build()
  +Widget header()
  +Widget buildUI()
  -dynamic _sendMessage()
  -List<ChatMessage> _generateChatMessagesList()
  +Widget mediaMessageButton()
  -dynamic _uploadAndSendMediaMessage()
}

"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::media_service.dart::MediaService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::services::storage_service.dart::StorageService"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "brainsync::model::user_profile.dart::UserProfile"
"brainsync::pages::Chats::chat_page.dart::_ChatPageState" o-- "dash_chat_2::dash_chat_2.dart::ChatUser"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Chats::chat_page.dart::_ChatPageState"

class "brainsync::pages::Chats::friends_chat.dart::FriendsChats" {
  +FriendsChatsState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Chats::friends_chat.dart::FriendsChats"

class "brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" {
  -GetIt _getIt
  -AlertService _alertService
  -AuthService _authService
  -DatabaseService _databaseService
  -NavigationService _navigationService
  +dynamic listenedToChats
  +dynamic loadedProfile
  +List<String>? chats
  +String? userProfilePfp
  +String? firstName
  +String? lastName
  +StreamSubscription<DocumentSnapshot<Object?>>? profileSubscription
  +StreamSubscription<QuerySnapshot<Object?>>? chatsSubscription
  +Map<String, String> chatSubtitles
  +Map<String, Timestamp?> lastMessageTimestamps
  +void initState()
  +void dispose()
  +dynamic loadProfile()
  +dynamic listenToChats()
  +void updateChatSubtitle()
  +Widget build()
}

"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "dart::async::StreamSubscription<DocumentSnapshot<Object>>"
"brainsync::pages::Chats::friends_chat.dart::FriendsChatsState" o-- "dart::async::StreamSubscription<QuerySnapshot<Object>>"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Chats::friends_chat.dart::FriendsChatsState"

class "brainsync::pages::Administation::login.dart::LoginPage" {
  +State<LoginPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Administation::login.dart::LoginPage"

class "brainsync::pages::Administation::login.dart::_LoginPageState" {
  -bool _isLoading
  -GetIt _getIt
  -NavigationService _navigationService
  +void initState()
  +Widget build()
  +Widget buildUI()
  +Widget headerText()
  +Widget createAnAccount()
  +Widget buildLoadingScreen()
}

"brainsync::pages::Administation::login.dart::_LoginPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Administation::login.dart::_LoginPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Administation::login.dart::_LoginPageState"

class "brainsync::pages::Administation::register.dart::RegisterPage" {
  +State<RegisterPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Administation::register.dart::RegisterPage"

class "brainsync::pages::Administation::register.dart::_RegisterPageState" {
  +String? name
  +String? email
  +String? password
  -GetIt _getIt
  -NavigationService _navigationService
  +File? selectedImage
  +String? errorMessage
  +bool isLoading
  +void initState()
  +Widget build()
}

"brainsync::pages::Administation::register.dart::_RegisterPageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Administation::register.dart::_RegisterPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Administation::register.dart::_RegisterPageState" o-- "dart::io::File"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Administation::register.dart::_RegisterPageState"

class "brainsync::pages::Administation::forget_password.dart::ForgetPassword" {
  +State<ForgetPassword> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Administation::forget_password.dart::ForgetPassword"

class "brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" {
  -GetIt _getIt
  -TextEditingController _emailController
  -AlertService _alertService
  -NavigationService _navigationService
  +String? errorMessage
  +void initState()
  +dynamic sendPasswordResetEmail()
  +Widget sendButton()
  +Widget entryField()
  +Widget build()
}

"brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Administation::forget_password.dart::_ForgetPasswordState"

class "brainsync::pages::Modules::module_page.dart::ModulePage" {
  +dynamic moduleInfo
  +State<ModulePage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Modules::module_page.dart::ModulePage"

class "brainsync::pages::Modules::module_page.dart::_ModulePageState" {
  +String? acadYear
  +String? preclusion
  +String? description
  +String? title
  +String? department
  +String? faculty
  +String? prerequisite
  +String? moduleCredit
  +String? moduleCode
  -GetIt _getIt
  -AuthService _authService
  -AlertService _alertService
  -DatabaseService _databaseService
  +bool modulesAdded
  +bool? current
  +bool? completed
  +String? userId
  +TextStyle labelStyle
  +TextStyle sectionTitleStyle
  +void initState()
  +void didUpdateWidget()
  +void initialiseValues()
  +dynamic addToSchedule()
  +dynamic removeFromSchedule()
  +Widget build()
  +Widget buildHeader()
  +Widget buildDisabledButton()
  +Widget buildActiveButton()
  +Widget buildTitle()
  +Widget buildDetails()
  +Widget buildDetailSection()
  +Widget buildRow()
  +Widget buildDescription()
}

"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "get_it::get_it.dart::GetIt"
"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "brainsync::services::database_service.dart::DatabaseService"
"brainsync::pages::Modules::module_page.dart::_ModulePageState" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Modules::module_page.dart::_ModulePageState"

class "brainsync::pages::Modules::all_mods.dart::ModuleListPage" {
  +_ModuleListPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "brainsync::pages::Modules::all_mods.dart::ModuleListPage"

class "brainsync::pages::Modules::all_mods.dart::_ModuleListPageState" {
  +dynamic futureModules
  +List<Module> filteredModules
  +TextEditingController searchController
  -NavigationService _navigationService
  -GetIt _getIt
  +String acadYear
  +void initState()
  +void dispose()
  +String getCurrentAcadYear()
  +dynamic navigateToModuleDetails()
  +void filterModules()
  +void clearSearch()
  +Widget build()
}

"brainsync::pages::Modules::all_mods.dart::_ModuleListPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"brainsync::pages::Modules::all_mods.dart::_ModuleListPageState" o-- "brainsync::services::navigation_service.dart::NavigationService"
"brainsync::pages::Modules::all_mods.dart::_ModuleListPageState" o-- "get_it::get_it.dart::GetIt"
"flutter::src::widgets::framework.dart::State" <|-- "brainsync::pages::Modules::all_mods.dart::_ModuleListPageState"

class "brainsync::services::navigation_service.dart::NavigationService" {
  -GlobalKey<NavigatorState> _navigatorKey
  -Map<String, Widget Function(BuildContext)> _routes
  +Map<String, Widget Function(BuildContext)> routes
  +GlobalKey<NavigatorState>? navigatorKey
  +void goBack()
  +dynamic pushName()
  +dynamic pushReplacementName()
  +dynamic pushNameFuture()
  +void push()
}

"brainsync::services::navigation_service.dart::NavigationService" o-- "flutter::src::widgets::framework.dart::GlobalKey<NavigatorState>"

class "brainsync::services::database_service.dart::DatabaseService" {
  -FirebaseFirestore _firebaseFirestore
  -GetIt _getIt
  -CollectionReference<UserProfile>? _usersCollection
  -CollectionReference<Object?>? _chatCollection
  -CollectionReference<Object?>? _postCollection
  -AlertService _alertService
  -AuthService _authService
  +void setUpCollectionReferences()
  +dynamic createUserProfile()
  +dynamic updateProfile()
  +dynamic fetchCurrentUser()
  +dynamic fetchUser()
  +dynamic fetchUserProfile()
  +Stream<DocumentSnapshot<Object?>> getUserProfile()
  +Stream<QuerySnapshot<UserProfile>> getUserProfiles()
  +dynamic checkChatExist()
  +dynamic createNewChat()
  +dynamic getChatDetails()
  +Stream<QuerySnapshot<Object?>> getAllUserChatsStream()
  +dynamic sendChatMessage()
  +Stream<dynamic> getChatData()
  +dynamic acceptFriendRequest()
  +dynamic cancelFriendRequest()
  +dynamic getFriends()
  +dynamic getMutualFriends()
  +dynamic rejectFriendRequest()
  +dynamic removeFriend()
  +dynamic sendFriendRequest()
  +dynamic addModuleToUserSchedule()
  +dynamic isInCompletedModule()
  +dynamic isInCurrentModule()
  +dynamic removeModule()
  +dynamic createNewPost()
  +dynamic fetchPosts()
  +dynamic fetchPost()
  +dynamic fetchBookmarkedPosts()
  +dynamic fetchUserPosts()
  +dynamic addBookmark()
  +dynamic removeBookmark()
  +dynamic likePost()
  +dynamic dislikePost()
  +dynamic addNewcomment()
  +dynamic likeComment()
  +dynamic dislikeComment()
}

"brainsync::services::database_service.dart::DatabaseService" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"brainsync::services::database_service.dart::DatabaseService" o-- "get_it::get_it.dart::GetIt"
"brainsync::services::database_service.dart::DatabaseService" o-- "cloud_firestore::cloud_firestore.dart::CollectionReference<UserProfile>"
"brainsync::services::database_service.dart::DatabaseService" o-- "cloud_firestore::cloud_firestore.dart::CollectionReference<Object>"
"brainsync::services::database_service.dart::DatabaseService" o-- "brainsync::services::alert_service.dart::AlertService"
"brainsync::services::database_service.dart::DatabaseService" o-- "brainsync::services::auth_service.dart::AuthService"

class "brainsync::services::media_service.dart::MediaService" {
  -ImagePicker _picker
  +dynamic getImageFromGallery()
  +dynamic pickImage()
}

"brainsync::services::media_service.dart::MediaService" o-- "image_picker::image_picker.dart::ImagePicker"

class "brainsync::services::auth_service.dart::AuthService" {
  -CollectionReference<UserProfile>? _usersCollection
  -FirebaseAuth _firebaseAuth
  -FirebaseFirestore _firebaseFirestore
  +List<String?> friendReqList
  +List<String?> friendList
  +List<String?> completedModules
  +List<String?> currentModules
  +List<String?> chats
  +String lastName
  +String selectedYear
  -User? _user
  +User? currentUser
  +User? user
  +void setUpCollectionReferences()
  +dynamic login()
  +dynamic signInWithGoogle()
  +dynamic signOut()
  +dynamic createUser()
  +dynamic register()
  +dynamic sendEmailVerification()
  +dynamic getUserProfile()
  +dynamic createUserProfile()
  +dynamic checkIfUserExists()
}

"brainsync::services::auth_service.dart::AuthService" o-- "cloud_firestore::cloud_firestore.dart::CollectionReference<UserProfile>"
"brainsync::services::auth_service.dart::AuthService" o-- "firebase_auth::firebase_auth.dart::FirebaseAuth"
"brainsync::services::auth_service.dart::AuthService" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"brainsync::services::auth_service.dart::AuthService" o-- "firebase_auth::firebase_auth.dart::User"

class "brainsync::services::api_service.dart::ApiService" {
  {static} +String baseUrl
  {static} +String apiVersion
  {static} +dynamic fetchModuleInfo()
  {static} +dynamic fetchModules()
  +String getCurrentAcadYear()
}

class "brainsync::services::alert_service.dart::AlertService" {
  -GetIt _getIt
  -NavigationService _navigationService
  +void showToast()
}

"brainsync::services::alert_service.dart::AlertService" o-- "get_it::get_it.dart::GetIt"
"brainsync::services::alert_service.dart::AlertService" o-- "brainsync::services::navigation_service.dart::NavigationService"

class "brainsync::services::storage_service.dart::StorageService" {
  -GetIt _getIt
  -FirebaseStorage _fireBaseStorage
  -FirebaseFirestore _firestore
  -AuthService _authService
  -AlertService _alertService
  +dynamic uploadUserProfile()
  +dynamic uploadUserCover()
  +dynamic saveData()
  +dynamic uploadImageToChat()
}

"brainsync::services::storage_service.dart::StorageService" o-- "get_it::get_it.dart::GetIt"
"brainsync::services::storage_service.dart::StorageService" o-- "firebase_storage::firebase_storage.dart::FirebaseStorage"
"brainsync::services::storage_service.dart::StorageService" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"brainsync::services::storage_service.dart::StorageService" o-- "brainsync::services::auth_service.dart::AuthService"
"brainsync::services::storage_service.dart::StorageService" o-- "brainsync::services::alert_service.dart::AlertService"


@enduml


